image: maven:3-jdk-11

variables:
  MAVEN_CLI_OPTS: "--batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  MYSQL_DATABASE: "gogreen"
  MYSQL_ROOT_PASSWORD: "root"
  XIRION_REGISTRY: "registry.xirion.net/vroest/oopp"

cache:
  paths:
    - .m2/repository

build:
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS clean compile

#test:
#  stage: test
#  script:
#    - mvn $MAVEN_CLI_OPTS clean test

test:
  stage: test
  services:
    - mariadb
  coverage: '/\d+.\d+ \% covered/'
  script:
    - mvn $MAVEN_CLI_OPTS clean install
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, "instructions covered"; print 100*covered/instructions, "% covered" }' coverage/target/site/jacoco-aggregate/jacoco.csv
  artifacts:
    paths:
      - coverage/target/site/jacoco-aggregate

site:
  stage: test
  script:
    - mvn site
  artifacts:
    paths:
      - target/site/

deploy:
  stage: deploy
  image: docker:stable
  except:
    - merge_requests
  services:
    - docker:dind
  before_script:
    - docker info
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN gitlab.ewi.tudelft.nl:4242
    - docker build . -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

deploy_xirion:
  stage: deploy
  image: docker:stable
  except:
    - merge_requests
  services:
    - docker:dind
  before_script:
    - docker info
  script:
    - echo $XIRION_PASS | docker login -u $XIRION_USER --password-stdin $XIRION_REGISTRY
    - docker build . -t $XIRION_REGISTRY:$CI_COMMIT_REF_NAME
    - docker push $XIRION_REGISTRY:$CI_COMMIT_REF_NAME
